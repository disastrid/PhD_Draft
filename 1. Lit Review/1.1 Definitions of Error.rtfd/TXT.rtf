{\rtf1\ansi\ansicpg1252\cocoartf1347\cocoasubrtf570
{\fonttbl\f0\fnil\fcharset0 Cochin;}
{\colortbl;\red255\green255\blue255;\red230\green255\blue79;}
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\fi360\sl288\slmult1\pardirnatural

\f0\fs28 \cf0 \cb1 1.1 Examining error\
\
Error is a deceptively simple term. Its Latin root is the verb 
\i errare
\i0 , meaning 
\i to stray
\i0 ; to err is to step outside the accepted way of doing things, to go out of bounds. \
\
\cb1 However, error is a slippery term. The bounds out of which one must stray in order to 
\i errare 
\i0 are not always clear, or even established.\cb1  For instance, where are the boundaries that we step outside when an error is made? Who determines where these boundaries lie? Can they change? What about the person making the error, and what if they do it in public? Does error exist if the person watching doesn\'92t notice? Is the error in the making, or in the perceiving? Varying disciplines of thought and research have their own ideas of what an error is\
\
The idea of error is further complicated by the weight of emotional content. The term \'93human error\'94 is common and usually connected with large-scale disaster, from plane crashes to nuclear accidents \cb1 \{Anonymous:2012uy\}\cb2 [need more examples of terrible human error]\cb1 . With this reputation as the cause of many negative events, error takes its place as an undesirable thing, something to be avoided - and something is always easily recognised when it happens.\
\
 Here we will examine error in a number of academic and social contexts, and reflect on its role in human activity.\cb1 \
\
1.1.0 Error in computer science\
Anyone who has tried to write code is familiar with error. In computer science, error seems to be an extremely simple entity: Something works or it doesn\'92t. This definition is so taken for granted that it\'92s difficult to find academic texts explaining what the discipline defines error to be. There exist some subtler classifications of error, however, such as the three most common error types: logical, syntax and run-time.\
A logical error is an error that causes a program to produce unintended output \cb2 [find something better: {\field{\*\fldinst{HYPERLINK "https://en.wikipedia.org/wiki/Logic_error%5D"}}{\fldrslt https://en.wikipedia.org/wiki/Logic_error]}}\cb1 . An example in English would be asking \'93Please hand me the salt\'94, and receiving salt when what you really wanted was pepper. Syntax and run-time errors, however, are commands that don\'92t make sense. A syntax error makes no sense and the receiver (a compiler, an interpreter, a browser) can\'92t understand it, and therefore can\'92t run it. In English, a syntax error might be \'93Please cat dishwasher walk\'94 - it\'92s impossible to understand what the asker is requesting. A runtime error differs in that it may be syntactically correct, but only in attempting to run it does it cease to make sense; an example in English might be \'93Please eat the dishwasher\'94.\
Though these errors are undesirable, the benefits of error are well known to computer programmers. Logical errors - or unintended effects - can be the source of great insight, and present understanding of underlying systems to the programmer that was not present before. Sometimes these errors can bring vulnerabilities and limits to light. Sometimes unintended consequences can surprise and delight.\cb2 [cite this!!]\cb1 \
Glitch culture is defined below.\
\
1.1.1 Error in scientific inquiry\
Scientific error seems, like computer science, to be a context where the boundaries of error are rigid, and where the difference between a value that is correct and one that is incorrect are readily apparent. However, in a fascinating volume from 1957 that engages specifically with what error is in a scientific context, the author provides thorough insight into the nuances of error in scientific inquiry and why they occur (Beers, 1957). He presents a myriad of terms (such as discrepancy, random error, accuracy and so on), but he engages with error as a term in an of itself, and presents two definitions. Firstly, error is the difference between a measured value and a \'93true\'94 one. Secondly, error is an \'93estimated uncertainty\'94 in an experiment.  In both cases, he makes it clear that scientific data is constantly evaluated in the light of an outside, persistent \'93truth\'94 - the boundaries from which data may stray - and makes no attempt to question the validity of this outside truth.\
The other terms are defined with respect to their effects on an experiment (for example, a \'93discrepancy\'94 is the difference between two measurements of the same thing), and then categorised according to their type (Systematic, Random and Illegitimate errors). Systematic and Random errors are analgous to 
\i slips
\i0 , as defined in the section \'93Error in HCI\'94. They are errors of the human, or the instruments.  Illegitimate errors, interestingly, are a class all their own, and defined as \'93avoidable errors which have no place in an experiment, and the trained reader of a report is justified in assuming that these are not present.\'94 These are blunders, computational errors, and \
\cb1 \
1.1.3 Error in music\
\
\
1.1.4 Error in HCI\
HCI has been concerned with error since its inception, since breeding the frightful \'93human erorr\'94 out of interfaces has been a priority to avoid disaster. Donald Norman, the most prolific thinker and writer on errors in human-computer interaction (whose background in a specialist in designing to reduce human error) presents us with a theory in his book 
\i The Design of Everyday Things 
\i0 \cb2 [cite]\cb1  that divides errors into two groups: 
\i slips
\i0  and 
\i mistakes.\

\i0 Slips are accidents. Slips include events such as pressing the wrong button, or forgetting what to do in the moment. Slips assume there is a solid, pre-established system in place, a single way of doing things from which the human user momentarily departed, through no real fault except human folly. \
Mistakes, in contrast, are not down to the individual. Rather, they are \
\
1.1.2 Error in communication theory\
\pard\pardeftab720
\cf0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\fi360\sl288\slmult1\pardirnatural
\cf0 In 1948, while working at the post-war Bell Telephone Laboratory, Claude Shannon developed an intriguing concept of error. His goal was \'93transparency\'94 in communication, which he defined as \'93reproducing at one point either exactly or approximately a message selected at another point\'94. It is important to note that his goal is to reproduce the message \'93either exactly or approximately\'94 - he engages fully with the fact that this reproduction might be inexact.\
The error that Shannon was dealing with was noise. He describes signals being \'93perturbed\'94 by noise and it is an undesired outcome, but the inclusion of noise does not render the signal useless; instead, he engages with error not as a state of right or wrong, but as a degree of inclusion. A signal that contains some noise - ie, that is not fully trasnparent - is still useful, just suboptimal.\
In this way, Shannon\'92s error is not a singular event or a binary on/off state. Rather, error is a varying quantity, that is acceptable until it obscures the original signal to some point where it becomes unusable. This point is specific to the signal, and to the receiver - not every signal is obscured in the same way, and not every receiver will accept the same amount of noise.\
\
1.1.5 Error is useful\
After unpacking the term \'93error\'94 and its definitions across a number of fields, \
\
1.1.5.1 Autotune, a disaster of perfection: Putting the human back in the machine\
\
1.1.5.2 Deviations as \'93style\'94\
\
1.1.5.3 Glitch art\
\cb1 Glitch culture has capitalised on exactly these sorts of errors. Glitch is an artistic discipline that pushes established technologies past their usual limits of use, and sometimes introduces deliberate errors in order to reap interesting effects. Though working in the outer limits of existing technology, glitch practitioners show our technological world back to us, show its limits and how it copes with unanticipated chaos. It disrupts and challenges the normal way of using technology, and through this provides insight into our technological reality, questions the nature of computing and the limits we impose upon it \cb2 [improve and cite the hell out of this]\cb1 \
\
\
}